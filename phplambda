#!/usr/bin/env php
<?php
declare(strict_types=1);

use DI\ContainerBuilder;
use PhpLambda\CommandRunner;
use Symfony\Component\Console\Style\SymfonyStyle;
use Symfony\Component\Filesystem\Filesystem;

require_once __DIR__ . '/vendor/autoload.php';

$app = new Silly\Application;
$containerBuilder = new ContainerBuilder;
$app->useContainer($containerBuilder->build(), true, true);

$app->command('init', function (SymfonyStyle $io, CommandRunner $commandRunner) {
    if (file_exists('serverless.yml')) {
        $io->error('A serverless.yml file already exists in this directory, aborting.');
        return;
    }
    copy(__DIR__ . '/template/serverless.yml', 'serverless.yml');
    $commandRunner->run('npm install --save serverless-plugin-scripts');
    $io->success('Project initialized and configured in file serverless.yml.');
});

$app->command('package', function (
    SymfonyStyle $io,
    Filesystem $filesystem,
    CommandRunner $commandRunner
) {
    $io->writeln('phplambda: Downloading PHP 7.1 in the bin/ directory');

    $filesystem->mkdir('bin');
    // Install PHP and necessary libraries
    if (!file_exists('bin/php')) {
        $commandRunner->run('curl -sSL https://lambci.s3.amazonaws.com/binaries/libtidy-0.99.tgz | tar -xz -C bin');
        $commandRunner->run('curl -sSL https://lambci.s3.amazonaws.com/binaries/libmcrypt-4.4.8.tgz | tar -xz -C bin');
        $commandRunner->run('curl -sSL https://lambci.s3.amazonaws.com/binaries/php-7.1.2.tgz | tar -xz -C bin');
        $filesystem->rename('bin/7.1.2', 'bin/php');
        $filesystem->remove('bin/php/etc/conf.d/xdebug.ini'); // disable xdebug
    }
});

$app->run();
