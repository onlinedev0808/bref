service: bref-demo

provider:
    name: aws
    runtime: provided
    stage: dev
    region: us-east-2

custom:
    bref: ${file(bref.yml)}

functions:
    function:
        handler: demo/function.php
        description: 'Bref CLI demo'
        layers:
            - ${bref:layer.php-72}

    http:
        handler: demo/http.php
        description: 'Bref HTTP demo'
        timeout: 5 # in seconds (API Gateway has a timeout of 30 seconds)
        memory: 1024
        layers:
            - ${self:custom.bref.layers.php-72-fpm}
        events: ${self:custom.bref.http-all-urls}

    console:
        handler: demo/console.php
        description: 'Bref console command demo'
        layers:
            - ${self:custom.bref.layers.php-72}
            - ${self:custom.bref.layers.console}

plugins:
    localPath: '.'
    modules:
        - bref.js

#    The following are a few example events you can configure
#    NOTE: Please make sure to change your handler code to work with those events
#    Check the event documentation for details
#    events:
#      - http:
#          path: users/create
#          method: get
#      - websocket: $connect
#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic
#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000
#      - alexaSkill: amzn1.ask.skill.xx-xx-xx-xx
#      - alexaSmartHome: amzn1.ask.skill.xx-xx-xx-xx
#      - iot:
#          sql: "SELECT * FROM 'some_topic'"
#      - cloudwatchEvent:
#          event:
#            source:
#              - "aws.ec2"
#            detail-type:
#              - "EC2 Instance State-change Notification"
#            detail:
#              state:
#                - pending
#      - cloudwatchLog: '/aws/lambda/hello'
#      - cognitoUserPool:
#          pool: MyUserPool
#          trigger: PreSignUp

#    Define function environment variables here
#    environment:
#      variable2: value2

# you can add CloudFormation resource templates here
#resources:
#    - $(file(vendor/mnapoli/bref/template/database.yml))
#    - $(file(vendor/mnapoli/bref/template/s3-assets.yml))
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
